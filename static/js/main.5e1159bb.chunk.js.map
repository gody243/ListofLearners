{"version":3,"sources":["components/LearnerDetails.js","pages/Home.jsx","pages/AddLearner.jsx","pages/UpdateLearner.jsx","App.js","reportWebVitals.js","index.js"],"names":["LearnerDetails","props","history","useHistory","learner","firstname","lastname","email","score","Button","variant","onClick","console","log","push","id","Home","useState","loading","setLoading","selectedUser","setSelectedUser","posts","setPosts","average","setAverage","useEffect","getPostsFromFirebase","db","collection","onSnapshot","querySnapshot","forEach","doc","data","averageScore","reduce","acc","post","length","toPrecision","ListGroup","map","Item","AddLearner","collectionRef","useFirestore","setFirstname","setLastname","setEmail","setScore","Form","onSubmit","event","preventDefault","set","then","Group","controlId","Label","Control","type","name","placeholder","value","onChange","e","target","required","min","max","method","useParams","get","update","App","Navbar","bg","Nav","to","path","exact","UpdateLearner","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","config","debug","process","DEBUG","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Firebase","initializeApp","firestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e1159bb.chunk.js","sourcesContent":["// import {useEffect,useState} from 'react'\r\n// import UpdateLearners from '../pages/Home'\r\n// import {db} from '../../src/index'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function LearnerDetails(props) {\r\n  const history = useHistory();\r\n\r\n  const onUpdate = () => {\r\n    console.log(history);\r\n    history.push(`/update/${props.learner.id}`);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <ul>\r\n        <li>firstName :{props.learner.firstname}</li>\r\n        <li>lastName :{props.learner.lastname}</li>\r\n        <li>email :{props.learner.email}</li>\r\n        <li>score :{props.learner.score}</li>\r\n      </ul>\r\n      <Button variant=\"secondary\" onClick={onUpdate}>\r\n        Update\r\n      </Button>\r\n    </section>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { db } from \"../../src/index\";\r\nimport LearnerDetails from \"../components/LearnerDetails\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nfunction Home() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedUser, setSelectedUser] = useState(0);\r\n  const [posts, setPosts] = useState([]);\r\n  const [average, setAverage] = useState();\r\n\r\n  useEffect(() => {\r\n    const getPostsFromFirebase = [];\r\n    db.collection(\"learners\").onSnapshot((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        getPostsFromFirebase.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setPosts(getPostsFromFirebase);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const averageScore = (\r\n      posts.reduce((acc, post) => acc + +post.score, 0) / posts.length\r\n    ).toPrecision(3);\r\n    setAverage(averageScore);\r\n    return () => {};\r\n  }, [posts]);\r\n\r\n  if (loading) {\r\n    return <h1>Loading firebase data...</h1>;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <h1>List of Learners</h1>\r\n      <h4>Average score : {average}</h4>\r\n      <ListGroup>\r\n        {posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <ListGroup.Item\r\n              key={post.id}\r\n              onClick={() => {\r\n                setSelectedUser(post.id);\r\n              }}\r\n            >\r\n              <span>{post.firstname}</span>\r\n              {selectedUser === post.id && <LearnerDetails learner={post} />}\r\n            </ListGroup.Item>\r\n          ))\r\n        ) : (\r\n          <p>No New learner yet</p>\r\n        )}\r\n      </ListGroup>\r\n    </main>\r\n  );\r\n}\r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { useFirestore } from \"reactfire\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nconst AddLearner = () => {\r\n  const history = useHistory();\r\n  const collectionRef = useFirestore().collection(\"learners\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [score, setScore] = useState(\"\");\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    collectionRef\r\n      .doc()\r\n      .set({\r\n        firstname,\r\n        lastname,\r\n        email,\r\n        //convert score to number\r\n        score: +score,\r\n      })\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n  return (\r\n    <main>\r\n      <Form onSubmit={onSubmitHandler}>\r\n        <h3>Add Learner</h3>\r\n\r\n        <Form.Group controlId=\"firstname\">\r\n          <Form.Label>Firstname</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            placeholder=\"FirstName\"\r\n            value={firstname}\r\n            onChange={(e) => setFirstname(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"lastname\">\r\n          <Form.Label>Lastname</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            placeholder=\"LastName\"\r\n            required\r\n            value={lastname}\r\n            onChange={(e) => setLastname(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"name@example.com\"\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"score\">\r\n          <Form.Label>Score</Form.Label>\r\n\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Score\"\r\n            min=\"0\"\r\n            max=\"10\"\r\n            name=\"score\"\r\n            required\r\n            value={score}\r\n            onChange={(e) => setScore(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </main>\r\n  );\r\n};\r\nexport default AddLearner;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useFirestore } from \"reactfire\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nconst AddLearner = ({ method }) => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const collectionRef = useFirestore().collection(\"learners\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [score, setScore] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    collectionRef\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        const data = doc.data();\r\n        console.log(data);\r\n        setFirstname(data.firstname);\r\n        setLastname(data.lastname);\r\n        setEmail(data.email);\r\n        setScore(data.score);\r\n      });\r\n    // eslint-disable-next-line\r\n  }, [id]);\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    collectionRef\r\n      .doc(id)\r\n      .update({\r\n        firstname,\r\n        lastname,\r\n        email,\r\n        score,\r\n      })\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n  return (\r\n    <main>\r\n      <Form onSubmit={onSubmitHandler}>\r\n        <h3>Update Learner</h3>\r\n\r\n        <Form.Group controlId=\"firstname\">\r\n          <Form.Label>Firstname</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            placeholder=\"FirstName\"\r\n            value={firstname}\r\n            onChange={(e) => setFirstname(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"lastname\">\r\n          <Form.Label>Lastname</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            placeholder=\"LastName\"\r\n            required\r\n            value={lastname}\r\n            onChange={(e) => setLastname(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"name@example.com\"\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"score\">\r\n          <Form.Label>Score</Form.Label>\r\n\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Score\"\r\n            min=\"0\"\r\n            max=\"10\"\r\n            name=\"score\"\r\n            required\r\n            value={score}\r\n            onChange={(e) => setScore(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </main>\r\n  );\r\n};\r\nexport default AddLearner;\r\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./pages/Home\";\nimport AddLearner from \"./pages/AddLearner\";\nimport UpdateLearner from \"./pages/UpdateLearner\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar bg=\"dark\">\n        <Nav>\n          <ul>\n            <li>\n              <Nav.Item>\n                <Link to=\"/\">Home</Link>\n              </Nav.Item>\n            </li>\n            <li>\n              <Nav.Item>\n                <Link to=\"/add-learner\">AddLearner</Link>\n              </Nav.Item>\n            </li>\n          </ul>\n        </Nav>\n      </Navbar>\n      <Switch>\n        <Route path=\"/add-learner\" exact>\n          <AddLearner />\n        </Route>\n        <Route path=\"/update/:id\" exact>\n          <UpdateLearner />\n        </Route>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'firebase/firestore'\nimport Firebase from 'firebase/app'\nimport { FirebaseAppProvider } from 'reactfire'\nimport dotenv from 'dotenv'\n\ndotenv.config({ debug: process.env.DEBUG })\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId:process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId:process.env.REACT_APP_APP_ID,\n}\nconst firebase=Firebase.initializeApp(firebaseConfig)\nconst db=firebase.firestore()\nexport {db}\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n      <App />\n    </FirebaseAppProvider>\n    \n    \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}